{% extends 'base.html.twig' %}

{% block title %}Forum{% endblock %}


{% block body %}
    <header>
    
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
        <h1>Welcome To Our Forum</h1>
    </header>
    <nav class="text-right">
        <a href="{{ path('publication_new') }}" class="btn btn-primary">Ajouter une publication</a>
        
    </nav>
    <section>
        {% for publication in publications %}
            {% if loop.index % 2 == 1 %}
                <div class="row">
            {% endif %}
            <div class="col-md-6">
                <div class="publication">
                    <h2>{{ publication.titre }}</h2>
                    <p>{{ publication.description }}</p>
                    <img width="100%" src="{{ asset('image/' ~ publication.image) }}" alt="Image de la publication">
                    <div class="download-and-rating-container">
                        <a href="{{ asset('image/' ~ publication.image) }}" download="{{ publication.image }}" class="download-btn btn btn-primary">Télécharger</a>
                        <div class="heart-icon" onclick="toggleHeart(this)">
                            <i class="fas fa-heart"></i>
                        </div>
                        <div class="average-rating">
                            {% for i in 1..5 %}
                                {% if i <= average_ratings[publication.id] %}
                                    <i class="fas fa-star" style="color: gold;"></i>
                                {% else %}
                                    <i class="far fa-star" style="color: gold;"></i>
                                {% endif %}
                            {% endfor %}
                        </div>
                    </div>
                    <div class="commentaires">
                        <h3>Commentaires :</h3>
                        {% for commentaire in publication.commentaires %}
                            <div class="commentaire">
                                {% if commentaire.iduser == 2 %}
                                    <p>{{ commentaire.contenu }}</p>
                                    <a href="{{ path('delete_comment', {'id': commentaire.id}) }}">Supprimer</a>
                                    <a href="{{ path('edit_comment', {'id': commentaire.id}) }}">Modifier</a>
                                {% endif %}
                            </div>
                        {% endfor %}
                    </div>
                    <button class="toggle-comment-form btn btn-primary">Comment</button>
                    <form class="comment-form" action="{{ path('add_comment', {'id': publication.id}) }}" method="post" {{ form_start(comment_forms[publication.id], {'attr': {'novalidate': 'novalidate'}}) }}>
                        {{ form_widget(comment_forms[publication.id]) }}
                        <div class="rating">
                            <input type hidden  id="ratingValue" name="rating" value="0"> <!-- Champ de note caché pour stocker la valeur de la note -->
                            <i class="far fa-star" style="color: gold;" data-star-value="1"></i>
                            <i class="far fa-star" style="color: gold;" data-star-value="2"></i>
                            <i class="far fa-star" style="color: gold;" data-star-value="3"></i>
                            <i class="far fa-star" style="color: gold;" data-star-value="4"></i>
                            <i class="far fa-star" style="color: gold;" data-star-value="5"></i>
                        </div>
                        <button type="submit" class="btn btn-primary">Ajouter commentaire</button>
                    </form>
                </div>
            </div>
            {% if loop.index % 2 == 0 or loop.last %}
                </div>
            {% endif %}
        {% endfor %}
    </section>

    <center>
        <div class="pagination" style="display: flex; justify-content: center;">
            <div style="border: 1px solid #ccc; padding: 5px;">
                {{ knp_pagination_render(publications) }}
            </div>
        </div>
    </center>

    {% block javascripts %}
        {{ parent() }}
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            document.querySelectorAll('.toggle-comment-form').forEach(button => {
                button.addEventListener('click', () => {
                    const commentForm = button.nextElementSibling;
                    commentForm.style.display = commentForm.style.display === 'none' ? 'block' : 'none';
                });
            });

            function toggleHeart(element) {
                element.classList.toggle('active');
                const heartIcon = element.querySelector('.fas.fa-heart');
                heartIcon.classList.toggle('red-heart');
            }

            // Désélectionne le bouton "Comment" au chargement de la page
            document.querySelectorAll('.toggle-comment-form').forEach(button => {
                const commentForm = button.nextElementSibling;
                commentForm.style.display = 'none';
            });

            // Gestion du rating avec des étoiles
            document.addEventListener('DOMContentLoaded', function() {
                const stars = document.querySelectorAll('.rating i');

                stars.forEach(star => {
                    star.addEventListener('mouseover', function() {
                        const value = parseInt(star.getAttribute('data-star-value'));
                        highlightStars(value);
                    });

                    star.addEventListener('click', function() {
                        const value = parseInt(star.getAttribute('data-star-value'));
                        document.getElementById('ratingValue').value = value;
                    });

                    star.addEventListener('mouseout', function() {
                        const value = parseInt(document.getElementById('ratingValue').value);
                        highlightStars(value);
                    });
                });

                function highlightStars(value) {
                    stars.forEach(star => {
                        const starValue = parseInt(star.getAttribute('data-star-value'));
                        if (starValue <= value) {
                            star.classList.add('fas');
                            star.classList.remove('far');
                        } else {
                            star.classList.remove('fas');
                            star.classList.add('far');
                        }
                    });
                }
            });
        </script>
    <style>
        .heart-icon {
            cursor: pointer;
            display: inline-block;
        }

        .heart-icon .fas.fa-heart {
            color: black;
            border: none;
            border-radius: 50%;
            padding: 5px;
            transition: color 0.3s;
        }

        .red-heart {
            color: red !important;
        }
    </style>
    {% endblock %}
{% endblock %}
  